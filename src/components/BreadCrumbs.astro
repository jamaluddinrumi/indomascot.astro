---
import { startCase } from "lodash-es";

interface BreadcrumbsProps {
  indexText?: string;
  mainBemClass?: string;
}

interface BreadcrumbItem {
  text: string;
  href: string;
  "aria-current"?: string;
}

const { indexText = "Home", mainBemClass = "c-breadcrumbs" } =
  Astro.props as BreadcrumbsProps;

const paths = Astro.url.pathname.split("/").filter((crumb: any) => crumb);
const ariaCurrent = Astro.request.url.pathname === "/" ? "page" : undefined;

/**
 * Array of breadcrumb items.
 * The first item is the index page.
 */
let parts: Array<BreadcrumbItem> = [
  {
    text: indexText,
    href: "/",
    "aria-current": ariaCurrent,
  },
];

/**
 * Loop through the paths and create a breadcrumb item for each.
 */
paths.forEach((text: string, index: number) => {
  const href = `/${paths.slice(0, index + 1).join("/")}`;

  parts = [
    ...parts,
    {
      text: text.replace(/[-_]/g, " "),
      href,
      "aria-current": ariaCurrent,
    },
  ];
});
---

<nav aria-label="Breadcrumbs" class={mainBemClass}>
  <ul class={`${mainBemClass}__crumbs`}>
    {
      parts.map(({ text, ...attrs }, index, array) => (
        <li class={`${mainBemClass}__crumb`}>
          {Astro.slots.has("index") && index === 0 && (
            <a {...attrs} class={`${mainBemClass}__link`}>
              <slot name="index" />
            </a>
          )}

          {(!Astro.slots.has("index") ||
            (Astro.slots.has("index") && index !== 0)) && (
            <a {...attrs} class={`${mainBemClass}__link`}>
              {startCase(text)}
            </a>
          )}

          {Astro.slots.has("separator") && array.length - 1 !== index && (
            <slot name="separator" />
          )}
        </li>
      ))
    }
  </ul>
</nav>
